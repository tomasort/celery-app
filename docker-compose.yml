version: "3.8"

x-common-env: &common-env
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  BROKER_URL: redis://redis:6379/
  # BROKER_URL: amqp://${RABBIT_USERNAME}:${RABBIT_USER_PASSWORD}@rabbit:5672/
  SECRET_KEY: ${SECRET_KEY}
  FLASK_PORT: ${FLASK_PORT}
  FLOWER_PORT: ${FLOWER_PORT}
  FLASK_CONFIG: production

x-app-base: &app-base
  build:
    context: flask-app
    dockerfile: docker/Dockerfile
  environment: *common-env
  networks:
    - messages
    - database
    - proxy-server
  depends_on:
    - redis

services:
  web:
    <<: *app-base
    command: /start.sh

  celery-worker:
    <<: *app-base
    command: /worker.sh

  redis:
    image: redis:alpine3.20
    networks:
      - messages

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - database

  nginx:
    build: nginx
    environment:
      - FLASK_PORT=${FLASK_PORT}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    networks:
      - proxy-server
    ports:
      - 80:80
    depends_on:
      - web
  # rabbit:
  #   build: ./rabbitmq
  #   environment:
  #     - RABBIT_USERNAME=${RABBIT_USERNAME}
  #     - RABBIT_USER_PASSWORD=${RABBIT_USER_PASSWORD}
  #   networks:
  #     - messages
  #     - database

networks:
  database:
    driver: bridge
  messages:
    driver: bridge
  proxy-server:
    driver: bridge

volumes:
  postgres-data:
